<?php
/**
 * 单据
 * User: fy
 * Date: 16-7-29
 * Time: 下午2:00
 */

namespace Admin\Controller;


abstract class InvController extends AdminController
{
    protected $bill_no_prefix;

    protected $bill_type;

    protected $model_name = 'Invoice';

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 新建 购货单
     */
    public function add()
    {
        $this->getInvInfo();

        $this->display();
    }

    /**
     * 获取单据信息
     */
    protected function getInvInfo()
    {
        $trans_type = I('trans_type', '0');

        if( empty($trans_type) ) {
            $this->error("请求地址,缺少必要参数");
        }

        //  获取采购单据号
        $bill_no = $this->getBillNo( $trans_type );

        $bill_type = C('bill_type')[$trans_type];

        $this->assign(compact('trans_type', 'bill_no', 'bill_type'));

        // 记录当前列表页的cookie
        Cookie('__forward__',$_SERVER['REQUEST_URI']);
    }

    /**
     * 保存数据
     */
    public function save()
    {
        $inputs = I('');

        $inputs['inv']['bill_type'] = $this->getBillType();

        $inputs['inv']['__hash__'] = $inputs['__hash__'];
        
        if( isset($inputs['inv']['arrears']) && !empty( (float)$inputs['inv']['arrears']) ) {
            $this->error( "暂不允许欠款" );
        }

        $invoice_model = D('Invoice');
        $inputs['inv'] = $invoice_model->create($inputs['inv']);

        if( !$inputs['inv'] ) {
            $this->error($invoice_model->getError(), '', self::AJAX_IS_OPEN);
        }

        $inputs['inv']['bus_id'] = getValue($inputs['inv'], 'bus_id', '0');
        $inputs['inv']['total_amount'] = getValue($inputs['inv'], 'total_amount', '0');
        $inputs['inv']['amount'] = getValue($inputs['inv'], 'amount', '0');
        $inputs['inv']['rp_amount'] = getValue($inputs['inv'], 'rp_amount', '0');
        $inputs['inv']['acc_id'] = getValue($inputs['inv'], 'acc_id', '0');
        $inputs['inv']['total_qty'] = getValue($inputs['inv'], 'total_qty', '0');
        $inputs['inv']['pur_sale_id'] = getValue($inputs['inv'], 'pur_sale_id', '0');

        /*  完善商品详情信息*/
        $invoice_info_model = D('InvoiceInfo');
        if( isset($inputs['data']) && !empty($inputs['data']) ) {
            foreach ($inputs['data'] as $key=>&$value) {
                $k = $key + 1;
                if($value['is_delete']) {
                    unset($inputs['data'][$key]);
                    continue;
                }
                $value['bus_id'] = $inputs['inv']['bus_id'];
                $value['bill_no'] = $inputs['inv']['bill_no'];
                $value['bill_type'] = $inputs['inv']['bill_type'];
                $value['bill_date'] = $inputs['inv']['bill_date'];
                $value['trans_type'] = $inputs['inv']['trans_type'];
                $value['pur_sale_id'] = $inputs['inv']['pur_sale_id'];

                $value = $invoice_info_model->create($value);

                if( !$value ) {
                    $this->error( '第' . $k . '条商品信息有误：'. $invoice_info_model->getError(), '' , self::AJAX_IS_OPEN);
                }
            }
            $inputs['data'] = array_values($inputs['data']);
        }

        /*  完善账户金额详情信息*/
        $invoice_info_model = D('AccountInfo');
        if( !isset($inputs['account']) || empty($inputs['account']) ) {
            $inputs['account'][0] = [];
        }

        foreach ($inputs['account'] as $key=>&$value) {

            $k = $key + 1;
            if( $value['is_delete']  || empty($value['acc_id']) || empty($value['amount']) || empty($value['way_id']) ) {
                unset($inputs['account'][$key]);
                continue;
            }

            $value['bus_id'] = $inputs['inv']['bus_id'];
            $value['bill_no'] = $inputs['inv']['bill_no'];
            $value['bill_type'] = $inputs['inv']['bill_type'];
            $value['bill_date'] = $inputs['inv']['bill_date'];
            $value['trans_type'] = $inputs['inv']['trans_type'];
            $value['acc_id'] = $inputs['inv']['acc_id'];
            $value['payment'] = isset($value['amount']) ? $value['amount'] : $inputs['inv']['amount'];
            $value['way_id'] = isset($value['way_id']) ? $value['way_id'] : 0;
            $value['memo'] = isset($value['memo']) ? $value['memo'] : 0;
            $value['settlement'] = isset($value['settlement']) ? $value['settlement'] : 0;
            $value['cate'] = isset($value['cate']) ? $value['cate'] : 0;

            $value = $invoice_info_model->create($value);

            if( !$value ) {
                $this->error( '第' . $k . '条账户信息有误：'. $invoice_info_model->getError(), '' , self::AJAX_IS_OPEN);
            }
        }

        $inputs['account'] = array_values($inputs['account']);

        if( $this->model->addData( $inputs ) ) {
            $this->success($this->model->getErrorMsg(), Cookie('__forward__'), self::AJAX_IS_OPEN);
        }

        $this->error($this->model->getErrorMsg(), '', self::AJAX_IS_OPEN);
    }

    /**
     * 获取单据编号
     */
    protected function getBillNo($prefix = '0')
    {
        return C('bill_no_prefix')[$prefix] . date('YmdHis') . rand(0, 9);
    }

    /**
     * 获取单据类型
     * @return bool
     */
    protected function getBillType()
    {
        if( empty($this->bill_type) ) {
            $bill_type = I('bill_type', '');
            return empty($bill_type) ? I('inv')['bill_type'] : '';
        }

        return $this->bill_type;
    }


    /**
     * 获取商品信息列表
     * @param string $type
     */
    public function getGoods()
    {
        $this->getGoodsList();

        $this->display('Inv/get_goods');
    }

}